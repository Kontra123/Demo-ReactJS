{"version":3,"sources":["assets/active.svg","assets/arrow-right.svg","assets/help.svg","context/MyContext.js","services/fetch.js","context/MyProvider.js","services/services.js","views/mainView/MainView.view.js","App.js","index.js"],"names":["module","exports","MyContext","React","createContext","fetchMode","Component","mode","fetchService","get","url","a","headers","request","Request","method","fetch","then","response","json","catch","error","post","body","JSON","stringify","patch","getResources","resources","length","resourcesMockData","getActions","actions","App","ReactDOM","render","document","getElementById"],"mappings":"guCAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,6VCI5BC,G,uCAFGC,IAAMC,iB,mFCFlBC,GCGkCF,IAAMG,UDH5B,CAAEC,KAAM,SAyDXC,EADM,I,sCApDjBC,I,uCAAM,WAAOC,GAAP,iBAAAC,EAAA,6DACIC,EAAU,CACZ,eAAgB,qCAEdC,EAAU,IAAIC,QAAJ,qDAA0DJ,GAAO,CAC7EK,OAAQ,MACRH,QAASA,IANX,kBASKI,MAAMH,EAASR,GAAWY,MAAK,SAACC,GAC/B,OAAQA,EAASC,UAGxBC,OAAM,SAACC,GACJ,MAAQ,OAdV,2C,2DAmBNC,K,uCAAO,WAAOZ,EAAKa,GAAZ,iBAAAZ,EAAA,6DACGC,EAAU,CACZ,eAAgB,qCAEdC,EAAU,IAAIC,QAAJ,qDAA0DJ,GAAO,CAC7EK,OAAQ,OACRH,QAASA,EACTW,KAAMC,KAAKC,UAAUF,KAPtB,kBAUIP,MAAMH,EAASR,GAAWY,MAAK,SAACC,GAC/B,OAAQA,EAASC,WAXtB,2C,6DAgBPO,M,uCAAQ,WAAOhB,EAAKa,GAAZ,iBAAAZ,EAAA,6DACEC,EAAU,CACZ,eAAgB,qCAEdC,EAAU,IAAIC,QAAJ,qDAA0DJ,GAAO,CAC7EK,OAAQ,QACRH,QAASA,EACTW,KAAMC,KAAKC,UAAUF,KAPrB,kBAUGP,MAAMH,EAASR,GAAWY,MAAK,SAACC,GAC/B,OAAQA,EAASC,WAXrB,2C,gEEZK,I,sCAtBbQ,a,sBAAe,4BAAAhB,EAAA,sEACaH,EAAaC,IAAI,uBAD9B,aACLmB,EADK,SAEKA,EAAUC,OAAS,GAFxB,yCAGAD,GAHA,gCAMAE,EAAkBF,WANlB,2C,KAUfG,W,sBAAa,4BAAApB,EAAA,sEACaH,EAAaC,IAAI,uBAD9B,aACHuB,EADG,SAEKA,EAAQH,OAAS,GAFtB,yCAGEG,GAHF,gCAMEF,EAAkBE,SANpB,4CCNjB,ICYeC,EAhBH,WAER,OAOI,sCCRRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bacc0949.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/active.1b4ccf59.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.c0b72c3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.00ed6d43.svg\";","import React from 'react';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","const fetchMode = { mode: 'cors' };\r\n\r\nclass FetchService {\r\n\r\n    get = async (url) => {\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n        const request = new Request(`http://www.json-generator.com/api/json/get/${url}`, {\r\n            method: 'GET',\r\n            headers: headers,\r\n        });\r\n\r\n        return fetch(request, fetchMode).then((response) => {\r\n                return (response.json());\r\n            }\r\n        )\r\n        .catch((error) => {\r\n            return ([]);\r\n        }\r\n    );\r\n    };\r\n\r\n    post = async (url, body) => {\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        };\r\n        const request = new Request(`http://www.json-generator.com/api/json/get/${url}`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        return fetch(request, fetchMode).then((response) => {\r\n                return (response.json());\r\n            }\r\n        );\r\n    };\r\n\r\n    patch = async (url, body) => {\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        };\r\n        const request = new Request(`http://www.json-generator.com/api/json/get/${url}`, {\r\n            method: 'PATCH',\r\n            headers: headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        return fetch(request, fetchMode).then((response) => {\r\n                return (response.json());\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nconst fetchService = new FetchService();\r\nexport default fetchService;\r\n","import React from 'react';\r\nimport MyContext from './MyContext';\r\n\r\nexport default class MyProvider extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider\r\n                value={{\r\n                    currentResource: this.props.currentResource,\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}","import fetchService from \"./fetch\";\r\nimport resourcesMockData from '../files/data.json'\r\n\r\nclass Services {\r\n\r\n    getResources = async () => {\r\n        const resources = await fetchService.get('cgoeXIpMWG?indent=2');\r\n        if(resources && resources.length > 0) {\r\n            return resources;\r\n        }\r\n        else {\r\n            return resourcesMockData.resources;\r\n        }\r\n    }\r\n\r\n    getActions = async () => {\r\n        const actions = await fetchService.get('ceeeljYHNe?indent=2');\r\n        if(actions && actions.length > 0) {\r\n            return actions;\r\n        }\r\n        else {\r\n            return resourcesMockData.actions;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst services = new Services();\r\nexport default services;","import React, { useEffect, useState } from 'react';\r\nimport \"./mainView.scss\";\r\nimport ResourceMain from '../../components/resources/ResourceMain';\r\nimport ResourceDetails from '../../components/resources/resourceDetails/ResourceDetails'\r\nimport { initResourcesMap } from '../../services/utils'\r\nimport MyProvider from '../../context/MyProvider'\r\nimport services from '../../services/services';\r\n\r\n\r\nconst MainView = props => {\r\n\r\n    const { history, location } = props;\r\n\r\n    const [state, setState] = useState({\r\n        currentResource: null,\r\n        resources: null,\r\n        actionsArray: null,\r\n        resourcesMap: null\r\n    })\r\n\r\n    const handleResourceClick = (resource) => {\r\n        history.replace(`/main?item=${resource.id}`);\r\n\r\n        setState({\r\n            ...state,\r\n            currentResource: resource,\r\n            actionsArray: state.resourcesMap.get(resource.id)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getResources = async () => {\r\n            const [resources, actions] = await Promise.all([\r\n                services.getResources(), services.getActions()\r\n            ])\r\n\r\n            //will create map between resourceId and his actions\r\n            const resourcesMap = initResourcesMap(resources, actions)\r\n\r\n            const params = new URLSearchParams(location.search);\r\n            const item = params.get('item');\r\n            let currentSource;\r\n            if(item) {\r\n                currentSource = resources[Number(item - 1)];\r\n            }\r\n            else {\r\n                currentSource = resources[0];\r\n                history.replace(`/main?item=1`);\r\n            }\r\n\r\n            setState({\r\n                ...state,\r\n                currentResource: currentSource,\r\n                resources: resources,\r\n                resourcesMap: resourcesMap,\r\n                actionsArray: resourcesMap.get(currentSource.id)\r\n            })\r\n\r\n        };\r\n\r\n        getResources();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1 className=\"demo-header\">Demo App</h1>\r\n            <div className=\"demo-content\">\r\n                <MyProvider currentResource={state.currentResource}>\r\n                    <ResourceMain resources={state.resources}\r\n                         resourceClick={handleResourceClick}/>\r\n                    <ResourceDetails actionsArray={state.actionsArray} />\r\n                </MyProvider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainView","import React from 'react';\nimport './app.scss';\nimport { Route, Switch, BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport MainView from './views/mainView/MainView.view';\n\nconst App = () => {\n\n    return (\n        // <Router>\n        //     <Switch>\n        //         <Redirect from=\"/\" exact to=\"/main\"/>\n        //         <Route path=\"/main\" component={MainView} />\n        //     </Switch>\n        // </Router>\n        <div>\n            test\n        </div>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}